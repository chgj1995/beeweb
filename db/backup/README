# MariaDB 백업 및 복원 스크립트

이 프로젝트는 Docker 컨테이너 내부에서 실행되는 MariaDB 데이터베이스를 백업하고 복원하는 스크립트를 제공합니다. 스크립트는 최신 10개의 백업 파일만 유지되도록 합니다.

## 스크립트 설명

- `backup.sh`: MariaDB 데이터베이스를 백업하고, 최신 10개의 백업 파일만 유지합니다.
- `rollback.sh`: 지정된 백업 파일을 사용하여 MariaDB 데이터베이스를 복원합니다.
- `install.sh`: 백업 스크립트를 크론 작업에 추가합니다.
- `uninstall.sh`: 백업 스크립트를 크론 작업에서 제거합니다.

## 사용 방법

### 1. 백업

`backup.sh` 스크립트는 MariaDB 데이터베이스를 백업합니다. 백업 파일은 날짜 형식(YYYYMMDD)으로 저장되며, 최신 10개의 백업 파일만 유지됩니다.

#### 사용 방법

1. `backup.sh` 스크립트에 실행 권한을 부여합니다:

    ```bash
    chmod +x backup.sh
    ```

2. `backup.sh` 스크립트를 실행합니다:

    ```bash
    sudo sh backup.sh
    ```

#### 결과

- 백업 파일은 `data` 디렉토리에 생성됩니다.
- 최신 10개의 백업 파일만 유지되며, 나머지 파일은 자동으로 삭제됩니다.

### 2. 복원

`rollback.sh` 스크립트는 지정된 백업 파일을 사용하여 MariaDB 데이터베이스를 복원합니다.

#### 사용 방법

1. `rollback.sh` 스크립트에 실행 권한을 부여합니다:

    ```bash
    chmod +x rollback.sh
    ```

2. `rollback.sh` 스크립트를 실행하여 데이터베이스를 복원합니다:

    ```bash
    sudo sh rollback.sh data/백업_파일_이름.sql
    ```

#### 결과

- 지정된 백업 파일을 사용하여 MariaDB 데이터베이스가 복원됩니다.

### 3. 설치

`install.sh` 스크립트는 `backup.sh` 스크립트를 크론 작업에 추가하여 매일 정해진 시간에 자동으로 백업을 수행합니다.

#### 사용 방법

1. `install.sh` 스크립트에 실행 권한을 부여합니다:

    ```bash
    chmod +x install.sh
    ```

2. `install.sh` 스크립트를 실행하여 크론 작업을 추가합니다:

    ```bash
    sudo sh install.sh
    ```

#### 결과

- `backup.sh` 스크립트가 매일 정해진 시간에 자동으로 실행되도록 크론 작업이 추가됩니다.

### 4. 제거

`uninstall.sh` 스크립트는 크론 작업에서 `backup.sh` 스크립트를 제거합니다.

#### 사용 방법

1. `uninstall.sh` 스크립트에 실행 권한을 부여합니다:

    ```bash
    chmod +x uninstall.sh
    ```

2. `uninstall.sh` 스크립트를 실행하여 크론 작업을 제거합니다:

    ```bash
    sudo sh uninstall.sh
    ```

#### 결과

- 크론 작업에서 `backup.sh` 스크립트가 제거됩니다.
